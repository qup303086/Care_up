@using Care_UP.Models;
@using MvcPaging

@model MvcPaging.IPagedList<Care_UP.Models.Orders>

@{

    ViewBag.Title = "Index";
    Layout = "~/Areas/Backend/Views/Shared/_Layout.cshtml";
}

<h2>訂單</h2>
@using (Html.BeginForm())
{
    <div>
        <label for="Order">訂單搜尋:</label>
        @Html.DropDownList("Order", new SelectList(Enum.GetValues(typeof(OrderType))), "請選擇", new { @class = "from-control" })

        <label>關鍵字搜尋:</label>
        <input type="text" name="keyword" value="" />

        <label>訂單建立日期搜尋:</label>
        <input type="date" name="date_start" value="" />
        <input type="date" name="date_end" value="" />
        <label>訂單開始結束搜尋:</label>
        <input type="date" name="starttime" value="" />
        <input type="date" name="endtime" value="" />

        <input type="submit" value="送出" />
    </div>
}
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Attendants.Email)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Elders.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().StartDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().EndDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Total)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().InitDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Status)
        </th>
        <th>
            撥款
        </th>

    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Attendants.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Elders.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StartDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EndDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Total)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.InitDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Status)
                @*@UIhelper.OrdeResult(item.Status)*@
            </td>
            <td>
                @if (item.Status == OrderType.照服員待收款)
                {
                    <a href="@Url.Action("Finish", "Orders", new {id = item.Id})" class="btn btn-warning btn-icon-split">
                        <span class="icon text-white-50">
                            <i class="fas fa-exclamation-triangle"></i>
                        </span>
                        <span class="text">付款</span>
                    </a>
                }
            </td>
            <td>
                <a href="@Url.Action("Edit", "Orders", new { id = item.Id })" class="btn btn-info btn-circle">
                    <i class="fas fa-info-circle"></i>
                </a>
                @*@Html.ActionLink("Edit", "Edit", new { id = item.Id },new {@class= "btn btn - info btn - circle "})*@
            </td>
        </tr>
    }

</table>
<div class="paginate_button page-item">
    @Html.Pager(Model.PageSize, Model.PageNumber, Model.TotalItemCount)
</div>
